/*******************************************************************************
 * Copyright 2019 metaphore
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        // https://github.com/Codearte/gradle-nexus-staging-plugin#tasks
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
    }
}

apply plugin: 'io.codearte.nexus-staging'

// Setup Nexus repo credentials.
// They usually defined in user global gradle.properties file.
// Or as environment variables (Travis-CI).
if (!ossrhUsername) {
    ossrhUsername = System.getenv('OSSRH_USERNAME')
    if (!ossrhUsername) {
        println 'ossrhUsername is not defined'
    } else {
        println 'ossrhUsername has been set from an environment variable.'
    }
}
if (!ossrhPassword) {
    ossrhPassword = System.getenv('OSSRH_PASSWORD')
    if (!ossrhPassword) {
        println 'ossrhPassword is not defined'
    } else {
        println 'ossrhPassword has been set from an environment variable.'
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/releases/" }
    }
}

nexusStaging {
    packageGroup = 'com.crashinvaders.vfx'
    username = ossrhUsername
    password = ossrhPassword
}

// Invokes 'build' and 'install' tasks on all projects in the correct order.
// Prefer this over 'gradle build install' when changing the version of library.
task installAll(dependsOn: ['gdx-vfx:core:build', 'gdx-vfx:core:install',
                            'gdx-vfx:effects:build', 'gdx-vfx:effects:install',
                            'gdx-vfx:gwt:build', 'gdx-vfx:gwt:install'])

// Invokes 'build' and 'uploadArchives' tasks on all projects.
task uploadArchivesAll(dependsOn: ['gdx-vfx:core:build', 'gdx-vfx:core:uploadArchives',
                            'gdx-vfx:effects:build', 'gdx-vfx:effects:uploadArchives',
                            'gdx-vfx:gwt:build', 'gdx-vfx:gwt:uploadArchives'])

// Invokes uploadArchives task if the version is a snapshot.
task uploadSnapshotArchivesAll(dependsOn: ['gdx-vfx:core:uploadSnapshotArchives',
                                     'gdx-vfx:effects:uploadSnapshotArchives',
                                     'gdx-vfx:gwt:uploadSnapshotArchives']) {
}