/*******************************************************************************
 * Copyright 2019 metaphore
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        // https://github.com/Codearte/gradle-nexus-staging-plugin#tasks
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/releases/" }
    }
}

// As ugly as it gets, but Nexus Staging plugin must be applied to the root project only.
apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = 'com.crashinvaders.vfx'
    username = ossrhUsername
    password = ossrhPassword
}

/** Checks if the property exists. If it doesn't - try to resolve it from the environment variable. */
void resolveProperty(String propertyName, String envVariableName) {
    if (!project.hasProperty(propertyName)) {
        project.ext.propertyName = System.getenv(envVariableName)
        if (!project.ext.propertyName) {
            println "$propertyName is not defined"
        } else {
            println "$propertyName has been set from an environment variable."
        }
    }
}
// Setup Nexus repo and GitHub package repo credentials.
// They usually defined in user global gradle.properties file
// or as environment variables (Travis-CI).
resolveProperty('ossrhUsername', 'OSSRH_USERNAME')
resolveProperty('ossrhPassword', 'OSSRH_PASSWORD')