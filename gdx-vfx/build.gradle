/*******************************************************************************
 * Copyright 2019 metaphore
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

subprojects {
    apply plugin: "java-library"
    apply plugin: "maven"
    apply plugin: 'signing'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    ext {
        projectVersion = '0.5.2'
        snapshotVersion = true
        libVersion = "$projectVersion${snapshotVersion ? '-SNAPSHOT' : ''}"
    }

    group = "com.crashinvaders.vfx"
    archivesBaseName = projectName
    version = libVersion

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    signing {
        required { !snapshotVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name = projectName
                    artifactId = projectName
                    packaging = 'jar'
                    description = projectDesc
                    url = 'http://github.com/crashinvaders/gdx-vfx'

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    scm {
                        connection 'scm:git:git@github.com:crashinvaders/gdx-vfx.git'
                        developerConnection 'scm:git:git@github.com:crashinvaders/gdx-vfx.git'
                        url 'http://github.com/crashinvaders/gdx-vfx/'

                    }

                    developers {
                        developer {
                            id 'metaphore'
                            name 'Anton Chekulaev'
                            email 'metaphore@crashinvaders.com'
                        }
                    }
                }
            }
        }
    }

    // Invokes uploadArchives task if the version is a snapshot.
    task uploadSnapshotArchives() {
        if (!snapshotVersion) {
            println 'Not a snapshot version.'
            return;
        }
        dependsOn 'build'
        dependsOn 'uploadArchives'
    }
}